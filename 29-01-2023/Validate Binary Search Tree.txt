/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> ls = new ArrayList<>();
    public boolean isValidBST(TreeNode root) {
        if(root==null){
            return true;
        }
        traverse(root,ls);

        for(int i=0;i<ls.size()-1;i++){
            if((ls.get(i+1)<=ls.get(i))){
                return false;
            }
        }
        return true;

    }
    public void traverse(TreeNode root,List<Integer> ls){
        if(root==null)
            return;
        traverse(root.left,ls);
        ls.add(root.val);
        traverse(root.right,ls);
    }
}