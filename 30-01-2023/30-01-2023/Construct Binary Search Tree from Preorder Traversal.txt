/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode bstFromPreorder(int[] preorder) {
        int up=Integer.MAX_VALUE;
        return create(preorder,up,new int[] {0});
    }

    public TreeNode create(int[] preorder,int up,int[] cur){
        if(cur[0]==preorder.length)
            return null;
        if(preorder[cur[0]]>up)
            return null;
        TreeNode node=new TreeNode(preorder[cur[0]++]);
        node.left=create(preorder,node.val,cur);
        node.right=create(preorder,up,cur);

        return node;
    }
}