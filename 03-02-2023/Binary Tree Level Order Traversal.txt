/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<List<Integer>> ls = new ArrayList<>();
    public List<List<Integer>> levelOrder(TreeNode root) {
       if (root==null){
           return ls;
       }
       Queue<TreeNode> que = new LinkedList<>();
       que.add(root);
       while(!que.isEmpty()){
           List<Integer> ls1 = new ArrayList<>(); 
           int n=que.size();
           for(int i=1;i<=n;i++){
               TreeNode ele = que.remove();
               ls1.add(ele.val);
               if(ele.left!=null){
                   que.add(ele.left);
               }
               if(ele.right!=null){
                   que.add(ele.right);
               }
            }
           ls.add(ls1);
       }
       return ls;
    }
}