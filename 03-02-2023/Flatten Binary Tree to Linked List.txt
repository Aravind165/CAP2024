/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<TreeNode> ls = new ArrayList<>();
    public void flatten(TreeNode root) {
        if(root==null)
            return;
        TreeNode root1 = root;
        preorder(root);
        for(int i=1;i<ls.size();i++){
            root.right=ls.get(i);
            root.left=null;
            root=root.right;
        }
    }
    public void preorder(TreeNode root){
        if(root==null)
            return;
        ls.add(root);
        preorder(root.left);
        preorder(root.right);
    }
}