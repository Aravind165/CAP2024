/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    List<Integer> l = new ArrayList<Integer>();
    HashMap<Integer,Integer> map = new HashMap<Integer,Integer>();
    public TreeNode bstToGst(TreeNode root) {
        TreeNode root1 = root;
        TreeNode root2=root;
        traverse(root);
        int sum=0;
        for(int i=l.size()-1;i>=0;i--){
            sum+=l.get(i);
            map.put(l.get(i),sum);
        }
        
        update(root1,map);
        return root2;
    }
    public void update(TreeNode root1,HashMap<Integer,Integer> map){
        if(root1== null){
            return;
        }
        update(root1.left,map);
        root1.val = map.get(root1.val);
        update(root1.right,map);
    }
    public void traverse(TreeNode root){
        if(root == null){
        return;
        }
        traverse(root.left);
        l.add(root.val);
        traverse(root.right);
        return;
    }
}